// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientWebAPI.Context;

namespace PatientWebAPI.Migrations
{
    [DbContext(typeof(AtlasContext))]
    partial class AtlasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PatientDetails");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientLabResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PatientLabVisit_Id")
                        .HasColumnType("int");

                    b.Property<string>("TestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestObservation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatientLabVisit_Id");

                    b.ToTable("PatientLabResult");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientLabVisit", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LabName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabTestRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientDetails_Id")
                        .HasColumnType("int");

                    b.Property<string>("ResultDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatientDetails_Id");

                    b.ToTable("PatientLabVisit");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientMedication", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientDetails_Id")
                        .HasColumnType("int");

                    b.Property<int?>("PatientLabVisit_Id")
                        .HasColumnType("int");

                    b.Property<string>("PrescribedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PrescriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrescriptionPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasIndex("PatientDetails_Id");

                    b.HasIndex("PatientLabVisit_Id");

                    b.ToTable("PatientMedication");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientVaccinationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdministeredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PatientDetails_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VaccineDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VaccineValidity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PatientDetails_Id");

                    b.ToTable("PatientVaccinationData");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientVisitHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientDetails_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatientDetails_Id");

                    b.ToTable("PatientVisitHistory");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientLabResult", b =>
                {
                    b.HasOne("PatientWebAPI.Models.DB.PatientLabVisit", "PatientLabVisit")
                        .WithMany()
                        .HasForeignKey("PatientLabVisit_Id");

                    b.Navigation("PatientLabVisit");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientLabVisit", b =>
                {
                    b.HasOne("PatientWebAPI.Models.DB.PatientDetails", "PatientDetails")
                        .WithMany()
                        .HasForeignKey("PatientDetails_Id");

                    b.Navigation("PatientDetails");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientMedication", b =>
                {
                    b.HasOne("PatientWebAPI.Models.DB.PatientDetails", "PatientDetails")
                        .WithMany()
                        .HasForeignKey("PatientDetails_Id");

                    b.HasOne("PatientWebAPI.Models.DB.PatientLabVisit", "PatientLabVisit")
                        .WithMany()
                        .HasForeignKey("PatientLabVisit_Id");

                    b.Navigation("PatientDetails");

                    b.Navigation("PatientLabVisit");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientVaccinationData", b =>
                {
                    b.HasOne("PatientWebAPI.Models.DB.PatientDetails", "PatientDetails")
                        .WithMany()
                        .HasForeignKey("PatientDetails_Id");

                    b.Navigation("PatientDetails");
                });

            modelBuilder.Entity("PatientWebAPI.Models.DB.PatientVisitHistory", b =>
                {
                    b.HasOne("PatientWebAPI.Models.DB.PatientDetails", "PatientDetails")
                        .WithMany()
                        .HasForeignKey("PatientDetails_Id");

                    b.Navigation("PatientDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
